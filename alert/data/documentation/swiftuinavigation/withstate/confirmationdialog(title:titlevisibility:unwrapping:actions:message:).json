{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"confirmationDialog"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M"},{"kind":"text","text":">("},{"kind":"externalParam","text":"title"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Text","preciseIdentifier":"s:7SwiftUI4TextV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"titleVisibility"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Visibility","preciseIdentifier":"s:7SwiftUI10VisibilityO"},{"kind":"text","text":" = .automatic, "},{"kind":"externalParam","text":"unwrapping"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"actions"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"title","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure returning the dialog’s title given the current dialog state."}]}]},{"name":"titleVisibility","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The visibility of the dialog’s title."}]}]},{"name":"value","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A binding to an optional value that determines whether a dialog should be"},{"type":"text","text":" "},{"type":"text","text":"presented. When the binding is updated with non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":" value, it is unwrapped and passed"},{"type":"text","text":" "},{"type":"text","text":"to the modifier’s closures. You can use this data to populate the fields of a dialog"},{"type":"text","text":" "},{"type":"text","text":"that the system displays to the user. When the user presses or taps one of the dialog’s"},{"type":"text","text":" "},{"type":"text","text":"actions, the system sets this value to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" and dismisses the dialog."}]}]},{"name":"actions","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A view builder returning the dialog’s actions given the current dialog state."}]}]},{"name":"message","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A view builder returning the message for the dialog given the current dialog"},{"type":"text","text":" "},{"type":"text","text":"state."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI’s "},{"type":"codeVoice","code":"confirmationDialog"},{"type":"text","text":" view modifiers are driven by two disconnected pieces of"},{"type":"text","text":" "},{"type":"text","text":"state: an "},{"type":"codeVoice","code":"isPresented"},{"type":"text","text":" binding to a boolean that determines if the dialog should be"},{"type":"text","text":" "},{"type":"text","text":"presented, and optional dialog "},{"type":"codeVoice","code":"data"},{"type":"text","text":" that is used to customize its actions and message."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Modeling the domain in this way unfortunately introduces a couple invalid runtime states:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isPresented"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"true"},{"type":"text","text":", but "},{"type":"codeVoice","code":"data"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"isPresented"},{"type":"text","text":" can be "},{"type":"codeVoice","code":"false"},{"type":"text","text":", but "},{"type":"codeVoice","code":"data"},{"type":"text","text":" can be non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"On top of that, SwiftUI’s "},{"type":"codeVoice","code":"confirmationDialog"},{"type":"text","text":" modifiers take static titles, which means the"},{"type":"text","text":" "},{"type":"text","text":"title cannot be dynamically computed from the dialog data."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This overload addresses these shortcomings with a streamlined API. First, it eliminates the"},{"type":"text","text":" "},{"type":"text","text":"invalid runtime states at compile time by driving the dialog’s presentation from a single,"},{"type":"text","text":" "},{"type":"text","text":"optional binding. When this binding is non-"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", the dialog will be presented. Further, the"},{"type":"text","text":" "},{"type":"text","text":"title can be customized from the dialog data."}]},{"type":"codeListing","syntax":"swift","code":["struct DialogDemo: View {","  @State var randomMovie: Movie?","","  var body: some View {","    Button(\"Pick a random movie\", action: self.getRandomMovie)","      .confirmationDialog(","        title: { Text($0.title) },","        titleVisibility: .always,","        unwrapping: self.$randomMovie,","        actions: { _ in","          Button(\"Pick another\", action: self.getRandomMovie)","        },","        message: { Text($0.summary) }","      )","  }","","  func getRandomMovie() {","    self.randomMovie = Movie.allCases.randomElement()","  }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"See "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/AlertsDialogs"},{"type":"text","text":" for more information on how to use this API."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftuinavigation\/withstate\/confirmationdialog(title:titlevisibility:unwrapping:actions:message:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/WithState\/confirmationDialog(title:titleVisibility:unwrapping:actions:message:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Presents a confirmation dialog from a binding to an optional value."}],"kind":"symbol","metadata":{"modules":[{"name":"SwiftUINavigation"}],"role":"symbol","title":"confirmationDialog(title:titleVisibility:unwrapping:actions:message:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"confirmationDialog"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M"},{"kind":"text","text":">("},{"kind":"externalParam","text":"title"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Text","preciseIdentifier":"s:7SwiftUI4TextV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"titleVisibility"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Visibility","preciseIdentifier":"s:7SwiftUI10VisibilityO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"unwrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"actions"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"symbolKind":"method","externalID":"s:7SwiftUI4ViewP0A12UINavigationE18confirmationDialog5title0G10Visibility10unwrapping7actions7messageQrAA4TextVqd__XE_AA0H0OAA7BindingVyqd__SgGqd_0_qd__XEqd_1_qd__XEtAaBRd_0_AaBRd_1_r1_lF::SYNTHESIZED::s:17SwiftUINavigation9WithStateV","extendedModule":"SwiftUI","platforms":[{"beta":false,"unavailable":false,"name":"iOS","introducedAt":"15.0","deprecated":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"12.0","deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"15.0","deprecated":false},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"8.0","deprecated":false}]},"hierarchy":{"paths":[["doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation","doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/WithState","doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/WithState\/View-Implementations"]]},"references":{"doc://SwiftUINavigation/documentation/SwiftUINavigation/AlertsDialogs":{"role":"article","title":"Alerts and dialogs","abstract":[{"type":"text","text":"Learn how to present alerts and confirmation dialogs in a concise and testable manner."}],"identifier":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/AlertsDialogs","kind":"article","type":"topic","url":"\/documentation\/swiftuinavigation\/alertsdialogs"},"doc://SwiftUINavigation/documentation/SwiftUINavigation":{"role":"collection","title":"SwiftUINavigation","abstract":[{"type":"text","text":"Tools for making SwiftUI navigation simpler, more ergonomic and more precise."}],"identifier":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation","kind":"symbol","type":"topic","url":"\/documentation\/swiftuinavigation"},"doc://SwiftUINavigation/documentation/SwiftUINavigation/WithState/confirmationDialog(title:titleVisibility:unwrapping:actions:message:)":{"role":"symbol","title":"confirmationDialog(title:titleVisibility:unwrapping:actions:message:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"confirmationDialog"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"M"},{"kind":"text","text":">("},{"kind":"externalParam","text":"title"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Text","preciseIdentifier":"s:7SwiftUI4TextV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"titleVisibility"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Visibility","preciseIdentifier":"s:7SwiftUI10VisibilityO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"unwrapping"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Binding","preciseIdentifier":"s:7SwiftUI7BindingV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"actions"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":", "},{"kind":"externalParam","text":"message"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"M"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[{"type":"text","text":"Presents a confirmation dialog from a binding to an optional value."}],"identifier":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/WithState\/confirmationDialog(title:titleVisibility:unwrapping:actions:message:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftuinavigation\/withstate\/confirmationdialog(title:titlevisibility:unwrapping:actions:message:)"},"doc://SwiftUINavigation/documentation/SwiftUINavigation/WithState/View-Implementations":{"role":"collectionGroup","title":"View Implementations","abstract":[],"identifier":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/WithState\/View-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftuinavigation\/withstate\/view-implementations"},"doc://SwiftUINavigation/documentation/SwiftUINavigation/WithState":{"role":"symbol","title":"WithState","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WithState"}],"abstract":[{"type":"text","text":"A container view that provides a binding to another view."}],"identifier":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/WithState","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WithState"}],"url":"\/documentation\/swiftuinavigation\/withstate"}}}