{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ModelValue"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"modelValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"viewValue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewValue"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"_Bindable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ViewValue"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"_Bindable"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Equatable","preciseIdentifier":"s:SQ"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"ViewValue"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"\n"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"modelValue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A binding from model state. "},{"type":"emphasis","inlineContent":[{"type":"text","text":"E.g."}]},{"type":"text","text":", a binding derived from a published field"},{"type":"text","text":" "},{"type":"text","text":"on an observable object."}]}]},{"name":"viewValue","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A binding from view state. "},{"type":"emphasis","inlineContent":[{"type":"text","text":"E.g."}]},{"type":"text","text":", a focus binding."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI comes with many property wrappers that can be used in views to drive view state, like"},{"type":"text","text":" "},{"type":"text","text":"field focus. Unfortunately, these property wrappers "},{"type":"emphasis","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" be used in views. It’s not possible"},{"type":"text","text":" "},{"type":"text","text":"to extract this logic to an observable object and integrate it with the rest of the model’s"},{"type":"text","text":" "},{"type":"text","text":"business logic, and be in a better position to test this state."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"We can work around these limitations by introducing a published field to your observable"},{"type":"text","text":" "},{"type":"text","text":"object and synchronizing it to view state with this view modifier."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftuinavigation\/iflet\/bind(_:to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/IfLet\/bind(_:to:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Synchronizes model state to view state via two-way bindings."}],"kind":"symbol","metadata":{"modules":[{"name":"SwiftUINavigation"}],"role":"symbol","title":"bind(_:to:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ModelValue"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewValue"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewValue"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"symbolKind":"method","externalID":"s:7SwiftUI4ViewP0A12UINavigationE4bind_2toQrqd___qd_0_tAD9_BindableRd__AdGRd_0_SQ5ValueRpd__AHQyd_0_AIRSr0_lF::SYNTHESIZED::s:17SwiftUINavigation5IfLetV","extendedModule":"SwiftUI","platforms":[{"beta":false,"unavailable":false,"name":"iOS","introducedAt":"14.0","deprecated":false},{"beta":false,"unavailable":false,"name":"macOS","introducedAt":"11.0","deprecated":false},{"beta":false,"unavailable":false,"name":"tvOS","introducedAt":"14.0","deprecated":false},{"beta":false,"unavailable":false,"name":"watchOS","introducedAt":"7.0","deprecated":false}]},"hierarchy":{"paths":[["doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation","doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/IfLet","doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/IfLet\/View-Implementations"]]},"references":{"doc://SwiftUINavigation/documentation/SwiftUINavigation":{"role":"collection","title":"SwiftUINavigation","abstract":[{"type":"text","text":"Tools for making SwiftUI navigation simpler, more ergonomic and more precise."}],"identifier":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation","kind":"symbol","type":"topic","url":"\/documentation\/swiftuinavigation"},"doc://SwiftUINavigation/documentation/SwiftUINavigation/IfLet/bind(_:to:)":{"role":"symbol","title":"bind(_:to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"ModelValue"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"ViewValue"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"ModelValue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ViewValue"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"View","preciseIdentifier":"s:7SwiftUI4ViewP"}],"abstract":[{"type":"text","text":"Synchronizes model state to view state via two-way bindings."}],"identifier":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/IfLet\/bind(_:to:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftuinavigation\/iflet\/bind(_:to:)"},"doc://SwiftUINavigation/documentation/SwiftUINavigation/IfLet":{"role":"symbol","title":"IfLet","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"IfLet"}],"abstract":[{"type":"text","text":"A view that computes content by unwrapping a binding to an optional and passing a non-optional"},{"type":"text","text":" "},{"type":"text","text":"binding to its content closure."}],"identifier":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/IfLet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IfLet"}],"url":"\/documentation\/swiftuinavigation\/iflet"},"doc://SwiftUINavigation/documentation/SwiftUINavigation/IfLet/View-Implementations":{"role":"collectionGroup","title":"View Implementations","abstract":[],"identifier":"doc:\/\/SwiftUINavigation\/documentation\/SwiftUINavigation\/IfLet\/View-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftuinavigation\/iflet\/view-implementations"}}}